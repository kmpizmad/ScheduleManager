# Rules in this file were initially inferred by Visual Studio IntelliCode from the D:\Egyetem\SZTF2\Beadand√≥\VQG0D5\VQG0D5\ codebase based on best match to current usage at 2021. 03. 31.
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

root = true

[*.cs]

dotnet_diagnostic.IDE0055.severity                                       = error

#Core editorconfig formatting - indentation

end_of_line                                                              = crlf
insert_final_newline                                                     = true
indent_style                                                             = space
indent_size                                                              = 2

#Formatting - new line options

#require members of object initializers to be on the same line
csharp_new_line_before_members_in_object_initializers                    = false
#require braces to be on a new line for methods, control_blocks, and types (also known as "Allman" style)
csharp_new_line_before_open_brace                                        = none
csharp_new_line_before_else                                              = false

#Formatting - organize using options

#sort System.* using directives alphabetically, and place them before other usings
dotnet_sort_system_directives_first                                      = true

#Formatting - spacing options

#require NO space between a cast and the value
csharp_space_after_cast                                                  = false
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause                           = true
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements                   = true
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause                          = true
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis            = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses              = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses       = false

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks                                       = true

#Style - Code block preferences

#prefer curly braces even for one line of code
csharp_prefer_braces                                                     = false : silent

#Style - expression bodied member options

#prefer block bodies for constructors
csharp_style_expression_bodied_constructors                              = false : silent
#prefer block bodies for methods
csharp_style_expression_bodied_methods                                   = false : silent
#prefer expression-bodied members for properties
csharp_style_expression_bodied_properties                                = true : silent

#Style - Expression-level  preferences

#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer                                          = true : silent

#Style - implicit and explicit types

#prefer explicit type over var in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere                                               = false : silent
#prefer explicit type over var when the type is already mentioned on the right-hand side of a declaration
csharp_style_var_when_type_is_apparent                                   = false : silent

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members               = true : silent

#Style - modifier options

#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers                             = for_non_interface_members : silent

#Style - Modifier preferences

#when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order                                          = public,protected,private,static,abstract,readonly : silent

#Style - qualification options

#prefer fields to be prefaced with this. in C# or Me. in Visual Basic
dotnet_style_qualification_for_field                                     = true : silent
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method                                    = true : silent
#prefer properties to be prefaced with this. in C# or Me. in Visual Basic
dotnet_style_qualification_for_property                                  = true : silent
